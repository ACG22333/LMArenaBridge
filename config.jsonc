{
  // 版本号
  // 用于程序更新检查，请不要手动修改。
  "version": "1.6.2",

  // --- 更新设置 ---
  // 开关：自动检查更新
  // 设置为 true，程序启动时会连接到 GitHub 检查新版本。
  // 设置为 false，将禁用更新检查，适合在无网络环境下使用。
  "enable_auto_update": true,

  // 功能开关：绕过敏感词检测
  // 在原始用户请求的对话中，额外注入一个内容为空的用户消息，以尝试绕过敏感词审查。
  // 设置为 true 来启用该功能，设置为 false 来禁用。
  //
  // !!! 重要提示 !!!
  // 修改此文件后，您必须重启本地的 Python 服务器 (local_openai_history_server.py)
  // 才能使更改生效。
  "bypass_enabled": true,

  // 功能开关：酒馆模式 (Tavern Mode)
  // 此模式专为需要完整历史记录注入的场景设计（如酒馆AI、SillyTavern等）。
  // 1. 合并多个system提示：将多个system角色的消息合并为一个，用换行符分隔。
  // 2. 完整历史注入：每次对话都将完整的、修改后的历史记录注入到LMArena。
  // 3. 自动触发：通过模拟输入一个空格并发送来触发模型的响应。
  //
  // !!! 重要提示 !!!
  // 此模式现在可以和 "bypass_enabled" 协同工作。
  // 修改后需要重启 Python 服务器才能生效。
  "tavern_mode_enabled": false,

  // --- 日志与调试 ---

  // 开关：服务器请求体日志
  // 设置为 true，本地 Python 服务器会在控制台打印收到的完整 OpenAI 请求体。
  // 用于调试客户端发送的数据。默认为 false。
  "log_server_requests": false,

  // 开关：油猴脚本调试日志
  // 设置为 true，浏览器控制台会打印详细的 "DEBUG" 级别日志。
  // 用于追踪油猴脚本的内部工作流程。默认为 false。
  "log_tampermonkey_debug": false,

  // --- 聚合日志功能 ---

  // 开关：聚合日志总开关
  // 设置为 true，将启用一个强大的聚合日志系统。
  // 1. 服务器启动时会创建一个带时间戳的日志文件 (例如 "debug_log_YYYY-MM-DD_HH-MM-SS.log")。
  // 2. 所有服务器端的操作和错误日志都会被写入该文件。
  // 3. 所有浏览器端的 console.log/warn/error 日志也会被捕获并发送到服务器，写入同一个文件。
  // 这对于完整追踪一次请求的生命周期非常有用。默认为 false。
  "enable_comprehensive_logging": false,

  // --- 【新】防人机检测挂机池 ---

  // 开关：防人机检测挂机池
  // 设置为 true，系统会在多于一个标签页连接时，随机选择一个标签页作为“挂机池”。
  // 该标签页会以固定间隔（如下方配置）自动发送简单的保持活跃消息（例如“你好”），以防止因长时间不活动而被系统判定为人机或断开连接。
  // 如果挂机标签页关闭，系统会自动从剩余标签页中重新选择一个。
  // 仅在连接的标签页数量 >= 2 时生效。默认为 false。
  "enable_anti_bot_hanging": true,

  // 挂机消息发送间隔（秒）
  // 当 enable_anti_bot_hanging 为 true 时生效。定义挂机标签页发送保持活跃消息的时间间隔。
  // 默认 120 秒（2 分钟）。
  "hanging_interval_seconds": 60,

  // --- 安全设置 ---

  // API Key
  // 设置一个 API Key 来保护您的服务。
  // 如果设置了此值，所有到 /v1/chat/completions 的请求都必须在 Authorization 头部中包含正确的 Bearer Token。
  // 例如：Authorization: Bearer your_secret_key
  // 如果留空 ("") 或未定义，则不需要 API Key，任何人都可以访问。
  // 修改后需要重启 Python 服务器才能生效。
  "api_key": "",

  // --- 高级设置 ---

  // 流式响应超时时间（秒）
  // 定义服务器等待来自 LMArena 的流式响应数据块的最长时间。
  // 如果在这个时间内没有收到任何新数据，请求将被视为超时。
  // 对于响应速度较慢的模型，您可能需要增加此值。默认 120 秒。
  "stream_response_timeout_seconds": 120
}